{
  "stats": {
    "suites": 2,
    "tests": 5,
    "passes": 5,
    "pending": 0,
    "failures": 0,
    "start": "2019-05-19T18:16:02.285Z",
    "end": "2019-05-19T18:16:03.650Z",
    "duration": 1365,
    "testsRegistered": 5,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "515edd82-9a99-463a-984f-6be2bfd96ac0",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "f44246bf-17a1-42b4-95e9-3eea99e78e24",
        "title": " Login ",
        "fullFile": "C:\\Users\\Student\\Documents\\GitHub\\kunde\\dist\\test\\rest\\apiTest.js",
        "file": "\\dist\\test\\rest\\apiTest.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "Login mit falscher Emailadresse",
            "fullTitle": " Login  Login mit falscher Emailadresse",
            "timedOut": false,
            "duration": 1062,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "supertest_1.default(app_1.app)\n    .post(`${app_1.basePath}/login`)\n    .set('Content-type', 'application/x-www-form-urlencoded')\n    .send(wrongEmail)\n    .expect(statusCodes_1.HttpStatus.FORBIDDEN)\n    // Promise\n    .end((error, response) => {\n    if (error) {\n        return done(error);\n    }\n    token = response.body.message; // eslint-disable-line prefer-destructuring\n    // tslint:disable-next-line:no-unused-expression\n    token.should.be.not.empty;\n    // synchroner Before-Hook\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "2cf16c95-8d42-490d-b191-ddef75409c4d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Login mit falschem Passwort",
            "fullTitle": " Login  Login mit falschem Passwort",
            "timedOut": false,
            "duration": 92,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "supertest_1.default(app_1.app)\n    .post(`${app_1.basePath}/login`)\n    .set('Content-type', 'application/x-www-form-urlencoded')\n    .send(wrongPassword)\n    .expect(statusCodes_1.HttpStatus.FORBIDDEN)\n    // Promise\n    .end((error, response) => {\n    if (error) {\n        return done(error);\n    }\n    token = response.body.message; // eslint-disable-line prefer-destructuring\n    // tslint:disable-next-line:no-unused-expression\n    token.should.be.not.empty;\n    // synchroner Before-Hook\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "3708514b-2c39-4e43-92a4-1c41c2859bc2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Login erfolgreich",
            "fullTitle": " Login  Login erfolgreich",
            "timedOut": false,
            "duration": 88,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "supertest_1.default(app_1.app)\n    .post(`${app_1.basePath}/login`)\n    .set('Content-type', 'application/x-www-form-urlencoded')\n    .send(loginDaten)\n    .expect(statusCodes_1.HttpStatus.OK)\n    // Promise\n    .end((error, response) => {\n    if (error) {\n        return done(error);\n    }\n    token = response.body.message; // eslint-disable-line prefer-destructuring\n    // tslint:disable-next-line:no-unused-expression\n    token.should.be.not.empty;\n    // synchroner Before-Hook\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "d404e2fe-8e9e-4607-8f44-1d74d7d1f2d3",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "2cf16c95-8d42-490d-b191-ddef75409c4d",
          "3708514b-2c39-4e43-92a4-1c41c2859bc2",
          "d404e2fe-8e9e-4607-8f44-1d74d7d1f2d3"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1242,
        "root": false,
        "rootEmpty": false,
        "_timeout": 5000
      },
      {
        "uuid": "14c9ca86-4983-4e5e-be06-5f06481cafb2",
        "title": " GET /kunden",
        "fullFile": "C:\\Users\\Student\\Documents\\GitHub\\kunde\\dist\\test\\rest\\apiTest.js",
        "file": "\\dist\\test\\rest\\apiTest.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook",
            "fullTitle": " GET /kunden \"before all\" hook",
            "timedOut": false,
            "duration": 85,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "supertest_1.default(app_1.app)\n    .post(`${app_1.basePath}/login`)\n    .set('Content-type', 'application/x-www-form-urlencoded')\n    .send(loginDaten)\n    .expect(statusCodes_1.HttpStatus.OK)\n    // Promise\n    .end((error, response) => {\n    if (error) {\n        return done(error);\n    }\n    token = response.body.message; // eslint-disable-line prefer-destructuring\n    // tslint:disable-next-line:no-unused-expression\n    token.should.be.not.empty;\n    // synchroner Before-Hook\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "f589391b-3506-4dbd-aac9-a9fb4d5dc563",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [],
        "tests": [
          {
            "title": "Alle Kunden ausgeben",
            "fullTitle": " GET /kunden Alle Kunden ausgeben",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "supertest_1.default(app_1.app)\n    .get(`${app_1.basePath}/kunden`)\n    .set('Authorization', token)\n    .expect(statusCodes_1.HttpStatus.OK)\n    .expect('Content-Type', /json/)\n    .end((error, response) => {\n    if (error) {\n        return done(error);\n    }\n    // tslint:disable-next-line:no-unused-expression\n    response.body.should.not.be.empty;\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "92bad774-3830-4feb-a978-24b25821c96b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "Alle Kunden ausgeben mit falschem Token",
            "fullTitle": " GET /kunden Alle Kunden ausgeben mit falschem Token",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "supertest_1.default(app_1.app)\n    .get(`${app_1.basePath}/kunden`)\n    .set('Authorization', wrongtoken)\n    .expect(statusCodes_1.HttpStatus.UNAUTHORIZED)\n    .expect('Content-Type', /json/)\n    .end((error, response) => {\n    if (error) {\n        console.log(response);\n        return done(error);\n    }\n    // tslint:disable-next-line:no-unused-expression\n    response.body.should.not.be.empty;\n    done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "ff33f7f5-2a36-4527-920a-71b8bbfbeb27",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "92bad774-3830-4feb-a978-24b25821c96b",
          "ff33f7f5-2a36-4527-920a-71b8bbfbeb27"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 11,
        "root": false,
        "rootEmpty": false,
        "_timeout": 5000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 5000
  },
  "copyrightYear": 2019
}